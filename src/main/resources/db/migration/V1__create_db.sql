CREATE TABLE refresh_token
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    token      VARCHAR(255)                            NOT NULL,
    ip_address VARCHAR(255),
    user_id    UUID                                    NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    expired_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    is_logout  BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_refresh_token PRIMARY KEY (id)
);

CREATE TABLE roles
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE user_roles
(
    role_id BIGINT NOT NULL,
    user_id UUID   NOT NULL,
    CONSTRAINT pk_user_roles PRIMARY KEY (role_id, user_id)
);

CREATE TABLE users
(
    id                         UUID         NOT NULL,
    login                      VARCHAR(255) NOT NULL,
    password_hash              VARCHAR(255) NOT NULL,
    first_name                 VARCHAR(255) NOT NULL,
    surname                    VARCHAR(255) NOT NULL,
    middle_name                VARCHAR(255) NOT NULL,
    create_at                  TIMESTAMP WITHOUT TIME ZONE,
    is_deleted                 BOOLEAN      NOT NULL,
    deleted_at                 TIMESTAMP WITHOUT TIME ZONE,
    is_account_non_expired     BOOLEAN      NOT NULL,
    is_account_non_locked      BOOLEAN      NOT NULL,
    is_credentials_non_expired BOOLEAN      NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE refresh_token
    ADD CONSTRAINT uc_refresh_token_token UNIQUE (token);

ALTER TABLE roles
    ADD CONSTRAINT uc_roles_name UNIQUE (name);

ALTER TABLE users
    ADD CONSTRAINT uc_users_login UNIQUE (login);

ALTER TABLE refresh_token
    ADD CONSTRAINT FK_REFRESH_TOKEN_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_user FOREIGN KEY (user_id) REFERENCES users (id);